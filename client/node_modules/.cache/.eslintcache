[{"/home/aaa/WebDev/React Node/client/src/index.js":"1","/home/aaa/WebDev/React Node/client/src/App.js":"2","/home/aaa/WebDev/React Node/client/src/reportWebVitals.js":"3","/home/aaa/WebDev/React Node/client/src/Calendar/Calendar.js":"4","/home/aaa/WebDev/React Node/client/src/Calendar/DayPage.js":"5"},{"size":535,"mtime":1688119374244,"results":"6","hashOfConfig":"7"},{"size":548,"mtime":1688294275245,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1688119374244,"results":"9","hashOfConfig":"7"},{"size":4903,"mtime":1688296393790,"results":"10","hashOfConfig":"7"},{"size":3009,"mtime":1688309027738,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1cln35d",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aaa/WebDev/React Node/client/src/index.js",[],[],[],"/home/aaa/WebDev/React Node/client/src/App.js",["30","31","32"],[],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Calendar from \"./Calendar/Calendar\";\nimport { Link, Route, Routes, BrowserRouter as Router } from \"react-router-dom\";\nimport Day from \"./Calendar/DayPage\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Calendar />} />\n            <Route path=\"/day/:absoluteDate\" element={<Day />} />\n          </Routes>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/aaa/WebDev/React Node/client/src/reportWebVitals.js",[],[],"/home/aaa/WebDev/React Node/client/src/Calendar/Calendar.js",["33","34","35"],[],"import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default class Calendar extends React.Component {\n  WeekDayShort = moment.weekdaysShort();\n  WeekDayShortName = this.WeekDayShort.map((day) => {\n    return (\n      <th key={day} className=\"week-day\">\n        {day}\n      </th>\n    );\n  });\n\n  month = () => {\n    return moment().format(\"MMMM\");\n  };\n\n  prevMonth = () => {\n    this.month = moment(this.month, \"MMMM\").subtract(1);\n  };\n\n  year = () => {\n    return moment().format(\"YYYY\");\n  };\n\n  state = {\n    stateObject: moment(),\n    allMonths: moment.months(),\n  };\n\n  render() {\n    const currentDate = moment();\n    // const currentDay = () => {\n    //   return currentDate.format(\"DD\");\n    // };\n\n    const firstDayOfMonth = () => {\n      return this.state.stateObject.startOf(\"month\").format(\"d\");\n    };\n\n    let blanksBegin = [];\n    const firstDay = parseInt(firstDayOfMonth());\n\n    for (let i = 0; i < firstDay; i++) {\n      blanksBegin.push(\n        <td key={`blank-${i}`} className=\"calendar-day\">\n          {\"\"}\n        </td>\n      );\n    }\n\n    let daysInMonth = [];\n    for (let day = 1; day <= this.state.stateObject.daysInMonth(); day++) {\n      let today =\n        day == moment().format(\"D\") &&\n        this.state.stateObject.format(\"MM\") == moment().format(\"MM\")\n          ? \"Today\"\n          : \"\";\n          const absoluteDate = moment().date(day).format(\"DD-MM-YYYY\");\n      daysInMonth.push(\n        <td key={day} className={`calendar-day${today}`}>\n          <Link to={`/day/${absoluteDate}`}>\n            <button>\n              <div className=\"date-number\">{day}</div>\n              <div className=\"tasks-number\">tasks</div>\n            </button>\n          </Link>\n        </td>\n      );\n    }\n\n    const totalCells =\n      7 *\n      Math.ceil(\n        (parseInt(firstDayOfMonth()) + parseInt(daysInMonth.length)) / 7\n      );\n\n    const blanksEnd = [];\n    for (\n      let i = blanksBegin.length + daysInMonth.length;\n      i < totalCells;\n      i++\n    ) {\n      blanksEnd.push(\n        <td\n          key={i + daysInMonth.length + blanksBegin.length}\n          className=\"calendar-day\"\n        >\n          {\"\"}\n        </td>\n      );\n    }\n\n    const allDays = [...blanksBegin, ...daysInMonth, ...blanksEnd];\n    let rows = [];\n    let cells = [];\n\n    allDays.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === allDays.length - 1) {\n        rows.push(cells);\n      }\n    });\n\n    if (rows[0].length === 0) {\n      rows.splice(0, 1);\n    }\n\n    let daysWrapped = rows.map((day) => {\n      return <tr className=\"day-row\">{day}</tr>;\n    });\n\n    return (\n      <div className=\"calendar-container\">\n        <table className=\"calendar\">\n          <thead className=\"calendar-header\">\n            <h2>Calendar</h2>\n            <div className=\"calendar-navi\">\n              <div className=\"calendar-navi-month\">\n                <button\n                  onClick={() => {\n                    const previousMonth = moment(\n                      this.state.stateObject\n                    ).subtract(1, \"month\");\n                    this.setState({ stateObject: previousMonth });\n                  }}\n                >\n                  {\"<\"}\n                </button>\n                <button>{this.state.stateObject.format(\"MMMM\")}</button>\n                <button\n                  onClick={() => {\n                    const nextMonth = moment(this.state.stateObject).add(\n                      1,\n                      \"month\"\n                    );\n                    this.setState({ stateObject: nextMonth });\n                  }}\n                >\n                  {\">\"}\n                </button>\n              </div>\n              <div className=\"calendar-navi-year\">\n                <button\n                  onClick={() => {\n                    const previousYear = moment(\n                      this.state.stateObject\n                    ).subtract(1, \"year\");\n                    this.setState({ stateObject: previousYear });\n                  }}\n                >\n                  {\"<\"}\n                </button>\n                <button>{this.state.stateObject.format(\"YYYY\")}</button>\n                <button\n                  onClick={() => {\n                    const nextYear = moment(this.state.stateObject).add(\n                      1,\n                      \"year\"\n                    );\n                    this.setState({ stateObject: nextYear });\n                  }}\n                >\n                  {\">\"}\n                </button>\n              </div>\n            </div>\n            <tr className=\"week-days\">{this.WeekDayShortName}</tr>\n          </thead>\n          <tbody className=\"calendar-body\">{daysWrapped}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/home/aaa/WebDev/React Node/client/src/Calendar/DayPage.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":2,"column":17,"nodeType":"38","messageId":"39","endLine":2,"endColumn":26},{"ruleId":"36","severity":1,"message":"40","line":2,"column":28,"nodeType":"38","messageId":"39","endLine":2,"endColumn":36},{"ruleId":"36","severity":1,"message":"41","line":4,"column":10,"nodeType":"38","messageId":"39","endLine":4,"endColumn":14},{"ruleId":"36","severity":1,"message":"42","line":34,"column":11,"nodeType":"38","messageId":"39","endLine":34,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":57,"column":13,"nodeType":"45","messageId":"46","endLine":57,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":58,"column":45,"nodeType":"45","messageId":"46","endLine":58,"endColumn":47},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'currentDate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]